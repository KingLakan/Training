# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

variables:
  - name: projectName
    value: Default Project

  - name: systemDefinitionFile
    value: veristand\$(projectName).nivssdf

trigger:
- main

pool: Windows_Pool

steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '3.x'
      addToPath: true

  - script: echo "$(Build.Repository.LocalPath)"
  - script: echo "$(Agent.ToolsDirectory)"
  - script: echo "$(Agent.ToolsDirectory)"
  - script: py.exe ./src/Append.py --file "$(Build.Repository.LocalPath)\veristand\$(projectName).nivsprj"
  - task: CopyFiles@2
    displayName: 'Copy Created System Definition File'
    inputs:
      SourceFolder: '$(Build.Repository.LocalPath)\veristand'
      Contents: '**'
      TargetFolder: '$(Build.BinariesDirectory)'

  - task: CmdLine@2
    inputs:
      script: |
        echo Start Veristand project
        
        echo 'C:\Program Files\National Instruments\VeriStand 2020\Veristand.exe -openProject "$(Build.Repository.LocalPath)\$(projectName).nivsprj" -sysDef "$(Build.Repository.LocalPath)\$(systemDefinitionFile)." -deploy'

#  - script:  echo 'Start and deploy Veristand project'
#  - task: BatchScript@1
#    inputs:
#      filename: 'C:\Program Files\National Instruments\VeriStand 2020\Veristand.exe'
#      arguments: '-openProject "$(Build.Repository.LocalPath)\$(projectName).nivsprj" -sysDef "$(Build.Repository.LocalPath)\$(systemDefinitionFile)." -deploy'
#      failOnStandardError: false

#  - task: UsePythonVersion@0
#    inputs:
#      versionSpec: '3.8'
#      addToPath: true
#      architecture: 'x64'

#  - task: PythonScript@0
#    inputs:
#      scriptSource: 'filePath'
#      scriptPath: '/home/david/Kodande/Azure/ownagent/_work/4/s/src/Append.py'



#  - script: python src/Append.py

##  - task: ArchiveFiles@2
##    inputs:
##      rootFolderOrFile: '$(Build.BinariesDirectory)'
##      includeRootFolder: true
##      archiveType: 'tar'
##      tarCompression: 'gz'
##      archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
##      replaceExistingArchive: true

##  - task: CmdLine@2
##    inputs:
##      script: |
##        echo Write your commands here
##        
##        echo "bajs" 1> /dev/pts/0


##  - script: echo "$(Build.ArtifactStagingDirectory)"

##  - task: ArchiveFiles@2
##    inputs:
##      rootFolderOrFile: '$(Build.BinariesDirectory)'
##      includeRootFolder: true
##      archiveType: 'zip'
##      archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
##      replaceExistingArchive: true

#  - task: PublishBuildArtifacts@1
#    inputs:
#      PathtoPublish: '$(Build.ArtifactStagingDirectory)'
#      ArtifactName: 'drop'
#      publishLocation: 'Container'

#  - task: PythonScript@0
#    inputs:
#      scriptSource: 'filePath'
#      scriptPath: './src/Append.py'
#      arguments: '$(Build.ArtifactStagingDirectory)/mydummy.txt'
      #$(Build.Repository.LocalPath)
##  - script: python3 ./src/Append.py --file "$(Build.ArtifactStagingDirectory)/mydummy.txt"