# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

variables:
  - name: systemDefinitionFile
    value: veristand\Engine Demo.nivssdf

  - name: veristandPath
    value: 

trigger:
- main

pool: Windows_Pool

steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '3.x'
      addToPath: true

  - script: echo "$(Build.Repository.LocalPath)"
  - script: echo "$(Agent.ToolsDirectory)"
  - script: echo "$(Agent.ToolsDirectory)"
  - script: py.exe ./src/Append.py --file "$(Build.Repository.LocalPath)\$(systemDefinitionFile)"

  - task: CopyFiles@2
    displayName: 'Copy Created System Definition File'
    inputs:
      SourceFolder: '$(Build.Repository.LocalPath)\veristand'
      Contents: '**'
      TargetFolder: 'Build.BinariesDirectory'

  - script:  echo 'Start and deploy Veristand project'
  - task: BatchScript@1
    inputs:
      filename: 'C:\Program Files\National Instruments\VeriStand 2020\Veristand.exe'
      arguments: '-openProject "C:\Users\dsamuels\Documents\VeriStand Projects\Engine Demo 4\Engine Demo 4.nivsprj" -sysDef "C:\Users\dsamuels\Documents\BuildFolder\Engine Demo.nivssdf" -deploy'
      failOnStandardError: true

#  - task: UsePythonVersion@0
#    inputs:
#      versionSpec: '3.8'
#      addToPath: true
#      architecture: 'x64'

#  - task: PythonScript@0
#    inputs:
#      scriptSource: 'filePath'
#      scriptPath: '/home/david/Kodande/Azure/ownagent/_work/4/s/src/Append.py'



#  - script: python src/Append.py

##  - task: ArchiveFiles@2
##    inputs:
##      rootFolderOrFile: '$(Build.BinariesDirectory)'
##      includeRootFolder: true
##      archiveType: 'tar'
##      tarCompression: 'gz'
##      archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
##      replaceExistingArchive: true

##  - task: CmdLine@2
##    inputs:
##      script: |
##        echo Write your commands here
##        
##        echo "bajs" 1> /dev/pts/0


##  - script: echo "$(Build.ArtifactStagingDirectory)"

##  - task: ArchiveFiles@2
##    inputs:
##      rootFolderOrFile: '$(Build.BinariesDirectory)'
##      includeRootFolder: true
##      archiveType: 'zip'
##      archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
##      replaceExistingArchive: true

#  - task: PublishBuildArtifacts@1
#    inputs:
#      PathtoPublish: '$(Build.ArtifactStagingDirectory)'
#      ArtifactName: 'drop'
#      publishLocation: 'Container'

#  - task: PythonScript@0
#    inputs:
#      scriptSource: 'filePath'
#      scriptPath: './src/Append.py'
#      arguments: '$(Build.ArtifactStagingDirectory)/mydummy.txt'
      #$(Build.Repository.LocalPath)
##  - script: python3 ./src/Append.py --file "$(Build.ArtifactStagingDirectory)/mydummy.txt"